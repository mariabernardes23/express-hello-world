#Nomde do workflow, útil para identificar na interface do GitHub Actions
name: NodeJS CI CD

# Configuração de quando o workflow deve ser acionado
on:
  # Aciona o workflow em eventos de push ou pull request, mas apenas para branch main
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Permite a execução manul do workflow
  workflow_dispatch:

# Define os jobs que serão executados
jobs:
  #Nome do job, neste caso, 'build'
  build:
    # Indica o tipo de máquina onde o job será executado
    runs-on: ubuntu-latest

    # Estratégica para a matriz de testes
    strategy:
     # Matriz de versões do Node.js a serem usadas
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]

    # Passos para executar o job
    steps:
      # Checkout do código-fonte
      - uses: actions/checkout@v4

      # Configuração do Node.js baseado na matriz de versões
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        
      # Instalção das dependências do projeto
      - name: Install dependencies
        run: yarn

      # Execução dos testes  
      - name: Run testes
        run: yarn test

      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.TARGET }}
          SOURCE: ""

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
              # npm install pm2 -g && pm2 update
              cd /home/ec2-user/backend/
              # pm2 start index.js --name=backend 
              pm2 restart backend